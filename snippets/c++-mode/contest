# -*- mode: snippet; require-final-newline: nil -*-
# name: contest
# key: contest
# binding: direct-keybinding
# --
#include <array>
#include <algorithm>
#include <vector>
#include <iostream>
#include <fstream>
#include <string>
#include <cassert>

const std::string task_name = "$1";
std::ifstream input_stream(task_name + ".in");
std::ofstream output_stream(task_name + ".out");

template<class T=uint64_t>
T read()
{
    T result;
    assert (input_stream >> result);
    return result;
}

template<class T>
void write(T value)
{
    assert (output_stream << value);
}


template<typename Cont>
void print_all(Cont c)
{
    for_each(begin(c), end(c), [](typename Cont::value_type x)
             { std::cerr << x << " "; });
    std::cerr << std::endl;
}

int main()
{
    write("\n");
    return 0;
}
